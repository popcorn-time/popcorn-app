{
  "name": "emitter-component",
  "description": "Event emitter",
  "version": "0.0.5",
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "component": {
    "scripts": {
      "emitter": "index.js"
    }
  },
  "readme": "# Emitter\n\n  Event emitter component.\n\n## Installation\n\n```\n$ component install component/emitter\n```\n\n## API\n\n### Emitter(obj)\n\n  The `Emitter` may also be used as a mixin. For example\n  a \"plain\" object may become an emitter, or you may\n  extend an existing prototype:\n\n```js\nvar obj = {};\nEmitter(obj);\nEmitter(User.prototype);\n```\n  \n### Emitter#on(event, fn)\n\n  Register an `event` handler `fn`.\n\n### Emitter#once(event, fn)\n\n  Register a single-shot `event` handler `fn`,\n  removed immediately after it is invoked the\n  first time.\n\n### Emitter#off(event, fn)\n\n  Remove `event` handler `fn`, or pass only the `event`\n  name to remove all handlers for `event`.\n\n### Emitter#emit(event, ...)\n\n  Emit an `event` with variable option args.\n\n### Emitter#listeners(event)\n\n  Return an array of callbacks, or an empty array.\n\n### Emitter#hasListeners(event)\n\n  Check if this emitter has `event` handlers.",
  "readmeFilename": "Readme.md",
  "_id": "emitter-component@0.0.5",
  "dist": {
    "shasum": "76e8efdfc489ed3c7ca0c0173c33534ba813361f"
  },
  "_from": "emitter-component@0.0.5",
  "_resolved": "https://registry.npmjs.org/emitter-component/-/emitter-component-0.0.5.tgz"
}
